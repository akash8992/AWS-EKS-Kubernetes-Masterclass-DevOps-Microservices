WEBVTT

00:00.293 --> 00:01.126
-: Welcome back.

00:01.126 --> 00:02.400
In step five, we are going to deploy

00:02.400 --> 00:04.680
all the manifests and then test it, okay?

00:04.680 --> 00:07.260
So let's go ahead and then do that now.

00:07.260 --> 00:09.510
So let's go back to our terminal

00:09.510 --> 00:14.310
and I'll say CD0803

00:14.310 --> 00:17.430
will be ALB NGINX context part basic routing.

00:17.430 --> 00:21.780
So I'll say, "clear," and I'll say, "QCTL."

00:21.780 --> 00:24.963
Apply -F and then cube manifest, right?

00:26.010 --> 00:28.860
So once these things are created,

00:28.860 --> 00:30.993
we can go ahead and then test them.

00:33.270 --> 00:37.860
Okay, so I'll say, "QCTL get pods,"

00:37.860 --> 00:40.650
and already NGINX one and NGINX two are running.

00:40.650 --> 00:44.190
User management microservice will take a while, around,

00:44.190 --> 00:46.800
around 90 seconds to get it up and running.

00:46.800 --> 00:49.620
So I'll go back to get ingress

00:49.620 --> 00:52.830
and then see that our ingress got created, right?

00:52.830 --> 00:54.120
So it got created.

00:54.120 --> 00:58.080
So let's go to our Amazon management console, right?

00:58.080 --> 01:00.000
And then verify the stuff.

01:00.000 --> 01:00.840
So you, if you want,

01:00.840 --> 01:02.850
you can even verify the ingress controller logs

01:02.850 --> 01:03.683
and all those things.

01:03.683 --> 01:05.250
But you can leave them as is,

01:05.250 --> 01:06.750
because earlier already,

01:06.750 --> 01:08.790
we have tested in our previous section, right?

01:08.790 --> 01:10.560
So it should be good, okay?

01:10.560 --> 01:13.470
So QCTL, you get SVC also.

01:13.470 --> 01:16.083
We need to see our note, three note port services,

01:16.920 --> 01:20.040
which is app one NGINX note port service,

01:20.040 --> 01:21.780
app two, and also user management.

01:21.780 --> 01:23.760
So all these three things we should see.

01:23.760 --> 01:26.010
Now come back, go to management console,

01:26.010 --> 01:28.830
and go to EC2.

01:28.830 --> 01:30.390
Right?

01:30.390 --> 01:35.390
And in EC2, let's go to load balances, right?

01:35.940 --> 01:37.380
In load balances.

01:37.380 --> 01:39.960
So let's see the listeners.

01:39.960 --> 01:41.100
In listeners,

01:41.100 --> 01:43.020
let's see the we have only default

01:43.020 --> 01:47.670
as 80 and we'll click on view our edit rules.

01:47.670 --> 01:49.980
And now you can see that whatever the rules

01:49.980 --> 01:52.830
you have written path based or routing rules, right?

01:52.830 --> 01:55.817
So /app1 should go to this,

01:55.817 --> 01:58.170
/app2 should go to something different,

01:58.170 --> 02:00.720
and /tar should go to something different.

02:00.720 --> 02:03.600
So three different target groups are created.

02:03.600 --> 02:06.060
And then for those three different target groups,

02:06.060 --> 02:08.070
target groups are nothing but your applications

02:08.070 --> 02:09.540
you can consider, right?

02:09.540 --> 02:13.320
And based on the path we are routing accordingly, right?

02:13.320 --> 02:16.770
So now let's go back and go to the target groups.

02:16.770 --> 02:18.270
And in target groups.

02:18.270 --> 02:20.040
So let's start with one, okay?

02:20.040 --> 02:22.260
So this is nothing but this is user management

02:22.260 --> 02:23.160
health status, okay?

02:23.160 --> 02:25.140
So this might take a while to get really started

02:25.140 --> 02:26.550
and then ready for us.

02:26.550 --> 02:29.637
So this is user management one, which is first one, okay?

02:29.637 --> 02:32.760
So, and we have the second one, which is app one,

02:32.760 --> 02:35.190
index start HTML, right?

02:35.190 --> 02:38.160
So, and you can see that it is also getting registered,

02:38.160 --> 02:40.200
it will take a while, but once it is registered,

02:40.200 --> 02:42.630
we can even see the health status.

02:42.630 --> 02:45.600
And the third one is app two index start HTML.

02:45.600 --> 02:47.430
And it is also getting registered.

02:47.430 --> 02:50.760
And it's a note port is 30032.

02:50.760 --> 02:52.230
And same thing should be there

02:52.230 --> 02:54.600
for these things also, 31745,

02:54.600 --> 02:58.740
some dynamic note port from our worker notes.

02:58.740 --> 03:00.780
So let's check them one more time.

03:00.780 --> 03:02.790
So this is the thing,

03:02.790 --> 03:05.580
so which is user management microservice

03:05.580 --> 03:07.170
and they are healthy, right?

03:07.170 --> 03:09.270
From both the notes, okay?

03:09.270 --> 03:12.780
So we really don't need to worry about this picture here,

03:12.780 --> 03:15.060
whatever I've shown, this user management note

03:15.060 --> 03:17.430
port services across the worker notes.

03:17.430 --> 03:20.790
Again, I am repeating the same thing for you.

03:20.790 --> 03:24.000
So now the next thing is this one, okay?

03:24.000 --> 03:28.020
And then in targets, let's see, app one also is healthy.

03:28.020 --> 03:31.350
And let's go to app two and then refresh it.

03:31.350 --> 03:33.480
And app two is also healthy.

03:33.480 --> 03:34.920
So now let's go ahead

03:34.920 --> 03:38.070
and then access our applications, right?

03:38.070 --> 03:41.370
So ALB, DNS, URL, app1index.html, app two,

03:41.370 --> 03:42.660
and then user management.

03:42.660 --> 03:44.310
So let me clear this.

03:44.310 --> 03:47.100
I'll say, "QCTL get NGINX."

03:47.100 --> 03:49.800
So I try to get the DNS names as far

03:49.800 --> 03:53.100
as possible from my command line only, okay?

03:53.100 --> 03:56.580
So let me copy this and I'll go here

03:56.580 --> 04:01.580
and then I'll start with stupid ://

04:01.950 --> 04:06.287
and user MGMT/health status.

04:08.730 --> 04:09.563
Right?

04:09.563 --> 04:10.470
So it's up and running.

04:10.470 --> 04:11.673
We should be good now.

04:12.810 --> 04:15.480
Okay, so now one more I need to take.

04:15.480 --> 04:20.480
Okay, so which is this should be :///app1/.

04:22.200 --> 04:24.630
At the end, you can directly put slash and then enter,

04:24.630 --> 04:28.470
or you can even say index.html, okay?

04:28.470 --> 04:30.030
So welcome to Stack Simplify,

04:30.030 --> 04:32.400
and you have the application as app one.

04:32.400 --> 04:34.980
So we'll also add one more application now.

04:34.980 --> 04:36.750
Is working or not?

04:36.750 --> 04:41.580
Slow, I'll say app2/index.html.

04:43.110 --> 04:45.390
Okay, so welcome to Stack Simplify.

04:45.390 --> 04:47.343
This is app two.

04:48.210 --> 04:51.120
So with that said, so we should be good

04:51.120 --> 04:54.900
with all the three apps on the routing perspective,

04:54.900 --> 04:56.880
whatever we have implemented.

04:56.880 --> 04:59.130
Context part based routing.

04:59.130 --> 05:01.620
So let's go ahead and then delete all these things,

05:01.620 --> 05:02.880
whatever we implemented.

05:02.880 --> 05:03.780
In our next lecture,

05:03.780 --> 05:06.540
we'll focus on implementing SSL.

05:06.540 --> 05:08.580
So I'll see you in the next lecture

05:08.580 --> 05:10.770
after cleaning this up, okay?

05:10.770 --> 05:13.713
So delete -F cube manifests.

05:15.270 --> 05:16.830
So now we have cleared everything.

05:16.830 --> 05:19.470
So mostly everything should get deleted.

05:19.470 --> 05:23.100
Okay, so let me see here and go to load balancer, it's gone.

05:23.100 --> 05:24.690
And then target groups, it's gone.

05:24.690 --> 05:25.523
Okay.

05:25.523 --> 05:27.210
So I'll see you in the next lecture.

05:27.210 --> 05:28.440
Until then, bye-bye.

05:28.440 --> 05:29.273
Thank you.
