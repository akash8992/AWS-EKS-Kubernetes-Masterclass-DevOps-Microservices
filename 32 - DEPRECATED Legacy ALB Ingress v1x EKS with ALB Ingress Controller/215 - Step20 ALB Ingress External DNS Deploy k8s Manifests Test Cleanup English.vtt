WEBVTT

00:00.000 --> 00:00.870
-: Welcome back.

00:00.870 --> 00:03.420
In this lecture, we are going to use

00:03.420 --> 00:06.000
the external DNS for our applications.

00:06.000 --> 00:08.580
Which is nothing but in our ingress manifest,

00:08.580 --> 00:12.300
we are going to add the external DNS related

00:12.300 --> 00:14.850
annotation with the DNS names which we want

00:14.850 --> 00:17.550
to register for our applications.

00:17.550 --> 00:21.600
So, let's get into 0 8, 0 6, 0 2,

00:21.600 --> 00:23.580
and if you see here as a step one

00:23.580 --> 00:26.160
we are going to add this annotation.

00:26.160 --> 00:27.600
So, which is nothing but external

00:27.600 --> 00:30.780
DNS.allfour.Kubernetes.io host name

00:30.780 --> 00:32.610
and provide, We are going to provide

00:32.610 --> 00:34.440
two DNS names for our application

00:34.440 --> 00:37.200
which is DNStestone.cubeoncloud.com

00:37.200 --> 00:40.860
and then DNStesttwo.cubeoncloud.com.

00:40.860 --> 00:43.110
Okay, so cubeoncloud.com.

00:43.110 --> 00:45.360
So, these things we are going to

00:45.360 --> 00:47.030
register now using...

00:48.840 --> 00:51.240
Kubernetes ingress manifest, okay,

00:51.240 --> 00:52.380
so let's do that now.

00:52.380 --> 00:54.570
So, let's go to visual studio cord

00:54.570 --> 00:57.630
and if we go inside here we have the existing

00:57.630 --> 00:59.670
manifest 1, 2, 6 are existing

00:59.670 --> 01:01.560
which is coming from our previous sections

01:01.560 --> 01:04.110
which is nothing but myeskel external name,

01:04.110 --> 01:06.240
and then user management microservice,

01:06.240 --> 01:07.770
and its own secrets.

01:07.770 --> 01:09.780
And then user management note port service

01:09.780 --> 01:12.990
and this is engineers app one and then engineers app two.

01:12.990 --> 01:15.000
So, in 07ALD ingress

01:15.000 --> 01:17.610
SSL redirect with external DNS

01:17.610 --> 01:21.510
you have added the additional information related

01:21.510 --> 01:25.620
to adding the Route 53 domains automatically, right?

01:25.620 --> 01:27.060
So, what happens now is like

01:27.060 --> 01:29.100
whenever we deploy this manifest;

01:29.100 --> 01:30.660
so, inside this cube on cloud,

01:30.660 --> 01:33.150
two more record sets are going to get created

01:33.150 --> 01:35.700
and currently three record sets becomes

01:35.700 --> 01:37.173
five record sets. Okay?

01:38.220 --> 01:40.590
So, let's go ahead and then do that now.

01:40.590 --> 01:44.070
So, let's go ahead and then deploy the stuff.

01:44.070 --> 01:46.200
So, we'll go here and as part

01:46.200 --> 01:49.020
of step two we are going to deploy it.

01:49.020 --> 01:50.980
So, let's go to our terminal

01:51.900 --> 01:53.340
and...

01:53.340 --> 01:56.010
we'll come back of 0 8 0 6 0 1

01:56.010 --> 01:59.190
and we'll go to 0 8, 0 6, 0 2,

01:59.190 --> 02:00.330
right?

02:00.330 --> 02:04.470
And now you'll say Cube CTL apply

02:04.470 --> 02:07.350
-: F and then cube manifests.

02:07.350 --> 02:09.723
So, it should create everything for us now.

02:17.190 --> 02:18.023
So...

02:18.023 --> 02:21.030
let's see, Cube CTL,

02:21.030 --> 02:24.840
get ports, and app one, app two are ready

02:24.840 --> 02:27.120
and external DNS is working as expected.

02:27.120 --> 02:29.340
So, if you want, we can go ahead

02:29.340 --> 02:32.220
and then check our external DNS logs, okay.

02:32.220 --> 02:34.270
So, what is happening we'll come to know.

02:35.610 --> 02:38.190
See, it will wait for some time

02:38.190 --> 02:40.440
and then the logs should get updated.

02:40.440 --> 02:42.300
So, now it said that create

02:42.300 --> 02:43.163
a DNStestonecubeoncloud.com,

02:45.360 --> 02:46.193
okay?

02:46.193 --> 02:48.750
In hosted zone so and so it has created, okay?

02:48.750 --> 02:50.610
So, it is getting created a records

02:50.610 --> 02:53.880
and then TXT records it is getting created inside that.

02:53.880 --> 02:56.640
So, let's, it's successfully updated.

02:56.640 --> 02:59.807
So, we can go back to our browser

02:59.807 --> 03:01.510
and go to route 53

03:02.730 --> 03:05.070
and go to hosted zones,

03:05.070 --> 03:06.390
and you can see two plus two

03:06.390 --> 03:08.100
it has created two area cards

03:08.100 --> 03:10.323
and then two TXT cards, okay?

03:11.250 --> 03:14.730
So, now still it didn't get updated.

03:14.730 --> 03:16.260
Now it got updated.

03:16.260 --> 03:17.910
So, you can see DNS test one

03:17.910 --> 03:21.570
and then DNS test two, these things got updated.

03:21.570 --> 03:24.780
So, with the values of the load balancer,

03:24.780 --> 03:26.550
whatever is provided, okay?

03:26.550 --> 03:29.460
So, now the load balancer is getting created.

03:29.460 --> 03:31.920
So, mostly it is in the provisioning status.

03:31.920 --> 03:34.410
So, let's wait for it to get completed.

03:34.410 --> 03:36.540
After that, we'll do the NS lookup test

03:36.540 --> 03:39.423
and then access our applications, okay?

03:40.890 --> 03:42.990
So, it is in provisioning status.

03:42.990 --> 03:45.300
So, now the load balancer is in active state.

03:45.300 --> 03:47.700
So, let me copy the DNS name here,

03:47.700 --> 03:50.400
and go to here, control C,

03:50.400 --> 03:51.480
clear.

03:51.480 --> 03:54.150
And I'll say, NS lookup,

03:54.150 --> 03:54.983
right?

03:54.983 --> 03:57.360
And first I'll test with our DNS name

03:57.360 --> 03:58.193
of our...

03:59.070 --> 04:00.330
load balancer, okay?

04:00.330 --> 04:02.460
And it is giving some IPs here.

04:02.460 --> 04:04.920
So, I'll say now next I'll send NS lookup

04:04.920 --> 04:07.650
and then I can copy these names here, right?

04:07.650 --> 04:09.033
So, this is the one, right?

04:10.165 --> 04:12.870
I say copy and then test, right?

04:12.870 --> 04:15.750
DNStestone.cubeoncloud.com.

04:15.750 --> 04:18.900
So, you can see the IP is .20.243

04:18.900 --> 04:20.580
so both are same in the same way

04:20.580 --> 04:24.390
let's also test further DNS test two,

04:24.390 --> 04:25.223
okay.

04:25.223 --> 04:26.190
So, IPs are same.

04:26.190 --> 04:29.010
So, now let's go back to our browser

04:29.010 --> 04:31.380
and then access them, right?

04:31.380 --> 04:36.380
So, http//DNStestone.cubeoncloud.com/appone/index.htms

04:46.380 --> 04:48.840
So, it should redirect to https.

04:48.840 --> 04:51.090
See, you can see the certificate here.

04:51.090 --> 04:53.370
So, certificate you can see that.

04:53.370 --> 04:57.450
So, and then, it saved the page successfully.

04:57.450 --> 05:01.560
So, we'll also check for app two and it's good.

05:01.560 --> 05:05.520
And if you want, we can also do it for

05:05.520 --> 05:07.540
user MGMT/healthstatus

05:10.410 --> 05:13.170
So, this also looks good.

05:13.170 --> 05:15.003
So, it's up and running.

05:16.320 --> 05:20.100
So, we can even test with the DNS test two now.

05:20.100 --> 05:22.860
So, in the same browser we can go here

05:22.860 --> 05:26.100
and then change the DNS to DNS test two

05:26.100 --> 05:28.680
and things should be up and running, okay?

05:28.680 --> 05:33.680
So, same for appone/index.html,

05:33.930 --> 05:34.763
okay?

05:34.763 --> 05:37.080
So, that's about with the DNS test two.

05:37.080 --> 05:39.210
So, now let's go ahead and also

05:39.210 --> 05:41.700
clean up whatever we have created.

05:41.700 --> 05:43.920
So, final step is to clean up the

05:43.920 --> 05:46.050
application things, whatever we have created.

05:46.050 --> 05:47.790
We leave the external DNS spot running

05:47.790 --> 05:49.530
in our cluster, okay?

05:49.530 --> 05:52.440
So I'll set cube CTL, delete -F,

05:52.440 --> 05:54.030
and then cube manifests, okay?

05:54.030 --> 05:56.100
So, this should delete whatever we have created

05:56.100 --> 05:58.110
from applications perspective.

05:58.110 --> 06:02.400
So, if we verify our logs related to external DNS

06:02.400 --> 06:04.470
we can see that as part of the cleanup

06:04.470 --> 06:06.690
it also deleted the DNS interest,

06:06.690 --> 06:08.700
whatever we have created.

06:08.700 --> 06:12.030
This is because of the setting whatever we commented here,

06:12.030 --> 06:13.860
policy upset only, okay?

06:13.860 --> 06:15.390
So, if the, if we enable it

06:15.390 --> 06:18.090
this delete should have been not possible, okay?

06:18.090 --> 06:20.850
So, we can even go back to our Route 53 here,

06:20.850 --> 06:23.220
and then go to cubeoncloud and then

06:23.220 --> 06:24.990
it will again end up with only three.

06:24.990 --> 06:27.600
Earlier it is seven, now all DNS test one

06:27.600 --> 06:30.780
and then test two got deleted related to it, okay?

06:30.780 --> 06:32.310
So, that's about one more thing

06:32.310 --> 06:34.590
which we need to be aware of.

06:34.590 --> 06:36.690
So, we will leave it the remaining things

06:36.690 --> 06:37.920
related to,

06:37.920 --> 06:42.060
so, let me say those things also, cube CTL, okay.

06:42.060 --> 06:45.150
Get ports in default, in default namespace

06:45.150 --> 06:47.850
external DNS will be running continuously.

06:47.850 --> 06:49.950
So, and I'll also say cube CTL

06:49.950 --> 06:52.410
get ports hyphen in cube system.

06:52.410 --> 06:55.110
So, one more which is related to our L being

06:55.110 --> 06:57.510
this controller will continuously keep running here.

06:57.510 --> 06:58.343
Okay?

06:58.343 --> 06:59.176
So, what we'll do is, like

06:59.176 --> 07:01.050
whenever we are going to do other sections

07:01.050 --> 07:03.450
also these we are going to leverage anyway.

07:03.450 --> 07:06.600
So, that's the reason we'll keep it running.

07:06.600 --> 07:09.060
So, now you need to understand one thing here.

07:09.060 --> 07:10.980
So, we would've done this just with

07:10.980 --> 07:12.510
app one and then app two only,

07:12.510 --> 07:14.610
why we are continuing this myeskel?

07:14.610 --> 07:16.380
And then user management microservice

07:16.380 --> 07:18.810
from many other sections after RDS

07:18.810 --> 07:20.250
and then classic load balancers

07:20.250 --> 07:21.870
and then all these sections.

07:21.870 --> 07:23.880
So, there is a reason for that, right?

07:23.880 --> 07:26.730
So, whenever we are building architectures, right?

07:26.730 --> 07:28.950
So, it should look like end to end.

07:28.950 --> 07:31.950
Which is nothing but database application tier

07:31.950 --> 07:34.800
and then web tier and everything.

07:34.800 --> 07:36.030
So, that is the case,

07:36.030 --> 07:37.800
you need to have one application which

07:37.800 --> 07:39.753
represents all the features.

07:40.620 --> 07:44.160
So, this application user management microservice

07:44.160 --> 07:46.350
represents means like it'll store the content

07:46.350 --> 07:49.550
in the RDS database in the private subnet.

07:49.550 --> 07:50.430
At the same time,

07:50.430 --> 07:52.740
because of that running the workloads

07:52.740 --> 07:54.330
we have created a private subnet

07:54.330 --> 07:55.890
and inside them only we are running

07:55.890 --> 07:57.810
the Kubernetes workloads.

07:57.810 --> 08:01.350
So, in public subnets we are running the load balancers.

08:01.350 --> 08:03.270
And externally for Route 53,

08:03.270 --> 08:06.450
we are registering the Route 53 DNS URLs.

08:06.450 --> 08:08.370
And using certificate manager,

08:08.370 --> 08:11.160
we are creating the certificate and leveraging that

08:11.160 --> 08:14.160
for our application load balancer using ingress.

08:14.160 --> 08:16.800
So, all these features to include them

08:16.800 --> 08:19.770
that's the reason we have introduced

08:19.770 --> 08:21.810
and then continue this myeskel external

08:21.810 --> 08:24.390
aim service with RDS db.

08:24.390 --> 08:25.620
So, that's about it.

08:25.620 --> 08:26.910
So, whenever it is not in use

08:26.910 --> 08:29.310
you can go ahead and then stop your database, right?

08:29.310 --> 08:32.130
So, it's not going to cost for us that much, okay?

08:32.130 --> 08:33.270
So, that's about it.

08:33.270 --> 08:36.090
So, this completes the...

08:36.090 --> 08:38.130
0 8, 0 6 section

08:38.130 --> 08:41.790
related to ALB ingress with external DNS.

08:41.790 --> 08:44.610
So, in our next lecture we'll discuss another topic.

08:44.610 --> 08:46.260
So, I'll see you in the next lecture.

08:46.260 --> 08:47.370
Until then, bye bye.

08:47.370 --> 08:48.203
Thank you.
