WEBVTT

00:00.150 --> 00:00.990
-: Welcome back.

00:00.990 --> 00:02.880
So in our previous lecture we discussed

00:02.880 --> 00:06.480
about the ALB Ingress controller foundation

00:06.480 --> 00:08.370
and then what are this cluster role service

00:08.370 --> 00:10.110
account cluster role binding

00:10.110 --> 00:13.680
and then IAM policy and also the IAM role.

00:13.680 --> 00:16.230
So now we are going to move on with step two

00:16.230 --> 00:17.063
which is nothing

00:17.063 --> 00:19.440
but creating the service account which will also

00:19.440 --> 00:23.040
create equal and cluster role binding and then cluster role.

00:23.040 --> 00:24.990
So while in this concept

00:24.990 --> 00:27.164
the main important thing here is

00:27.164 --> 00:29.550
we are not going to use any specific version

00:29.550 --> 00:32.460
whatever AWS provide in which documentation.

00:32.460 --> 00:34.440
So we are going to straight away going to

00:34.440 --> 00:35.850
use the master branch so

00:35.850 --> 00:37.470
that always we'll get the

00:37.470 --> 00:41.430
latest information for this role from the AWS.

00:41.430 --> 00:45.060
Okay? So that's the reason we have implemented it

00:45.060 --> 00:47.400
by the link we have provided is our back role

00:47.400 --> 00:51.150
from the master branch instead of a specific version.

00:51.150 --> 00:53.520
So now we are going to

00:53.520 --> 00:55.380
verify what all the service

00:55.380 --> 00:56.740
accounts present in our

00:57.600 --> 01:00.690
Kubernetes cube system namespace.

01:00.690 --> 01:02.880
Okay, so let me clear this

01:02.880 --> 01:04.600
and what I'm going to say is

01:06.058 --> 01:08.280
cube CTL get SCA is nothing

01:08.280 --> 01:11.730
but service account and high finance cube system.

01:11.730 --> 01:16.080
So which is nothing but in name space cube system, right?

01:16.080 --> 01:20.490
So now we have got lot of information here which is nothing

01:20.490 --> 01:23.280
but lot of service accounts available here.

01:23.280 --> 01:27.930
So we will leave this and now if you see these are

01:27.930 --> 01:30.510
we really don't have any new service account here

01:30.510 --> 01:32.310
with us related

01:32.310 --> 01:35.610
to ALB Ingress controller already created and present here.

01:35.610 --> 01:38.370
So we'll go ahead and then create that now.

01:38.370 --> 01:42.300
So we are going to copy this entire link and then

01:42.300 --> 01:45.450
paste it to create the cluster role cluster role binding

01:45.450 --> 01:50.190
and then service account for ALB Ingress controller.

01:50.190 --> 01:52.350
So you can see that it created the cluster role,

01:52.350 --> 01:54.120
it created the cluster role binding

01:54.120 --> 01:57.150
and also it created the service account.

01:57.150 --> 02:00.810
So now if I again execute the same command cube CTL get

02:00.810 --> 02:05.460
service accounts in cube system name space, I'm going to

02:05.460 --> 02:07.950
get the ALB Ingress controller just now created

02:07.950 --> 02:12.150
which is 13 seconds before, which is age, right?

02:12.150 --> 02:14.610
So now we have verified it.

02:14.610 --> 02:16.410
So now we are going to describe it.

02:16.410 --> 02:18.870
So the reason we are going to describe it is we'll come to

02:18.870 --> 02:20.070
know in our next steps.

02:20.070 --> 02:24.870
Okay? So we are going to describe it and in the annotations

02:24.870 --> 02:28.380
we are going to review any of the AWS IAM roles.

02:28.380 --> 02:32.580
So in annotations you don't see any of the AWS IAM roles.

02:32.580 --> 02:35.130
So once we go ahead and then implement next steps

02:35.130 --> 02:39.300
finally whenever we verify here the AWS IAM role

02:39.300 --> 02:40.530
will be annotated.

02:40.530 --> 02:44.640
So which means like this service account gets the

02:44.640 --> 02:47.190
capacity to call

02:47.190 --> 02:49.680
means like get the capacity to call other

02:49.680 --> 02:51.870
AWS services means like from the pod

02:51.870 --> 02:54.540
from the ALB Ingress controller pod

02:54.540 --> 02:58.800
we will be able to call other AWS services outside of

02:58.800 --> 03:00.930
the EKS cluster, right?

03:00.930 --> 03:03.810
So when the service account gets that capacity

03:03.810 --> 03:06.360
when you annotate it with that respective role

03:06.360 --> 03:08.580
and whatever is present, the policies means

03:08.580 --> 03:10.800
like for which services the policies is present

03:10.800 --> 03:13.140
in that AWS IAM role.

03:13.140 --> 03:16.380
So those things will be able to be accessible

03:16.380 --> 03:20.580
from this respective to service account using pod, right?

03:20.580 --> 03:24.210
So now let's go ahead and then so for reference also

03:24.210 --> 03:27.060
I'll put the output here for the comparison for you.

03:27.060 --> 03:29.790
So now we are going to create a IAM policy for

03:29.790 --> 03:31.620
ALB Ingress controller.

03:31.620 --> 03:33.750
So we created a service account cluster role

03:33.750 --> 03:35.850
and then cluster binding.

03:35.850 --> 03:39.975
Now we are going to create IAM policy for ALB

03:39.975 --> 03:41.520
Ingress controller.

03:41.520 --> 03:43.080
So why this policy?

03:43.080 --> 03:46.170
So this IAM policy will allow ALB Ingress

03:46.170 --> 03:49.655
controller part to make calls to AWS APIs.

03:49.655 --> 03:52.560
So if you want to call those AWS APIs

03:52.560 --> 03:54.420
again those are also protected once, right?

03:54.420 --> 03:57.810
So review IAM policy and then create a IAM role

03:57.810 --> 03:59.520
and then that role will be annotated

03:59.520 --> 04:01.020
with this service account

04:01.020 --> 04:03.000
and then that service account will be configured

04:03.000 --> 04:05.640
in this respect to ALB Ingress control par so

04:05.640 --> 04:07.980
that we will be able to access the respective

04:07.980 --> 04:11.430
AWS APIs configured in this IAM policy means

04:11.430 --> 04:15.180
like respect to AWS APIs services or whatever it is, right?

04:15.180 --> 04:16.770
So now we have a issue

04:16.770 --> 04:21.060
with the IAM policy dot GSN whatever AWS has provided.

04:21.060 --> 04:22.200
Due to that you

04:22.200 --> 04:24.330
will not be able to create this directly

04:24.330 --> 04:25.163
which means

04:25.163 --> 04:27.090
like whenever you try to create using command line

04:27.090 --> 04:31.320
right AWS IAM create policy and then if you try to create it

04:31.320 --> 04:34.140
so obviously it is going to throw an error.

04:34.140 --> 04:36.000
So you can even try it now.

04:36.000 --> 04:39.330
So an error occurred mal former policy document.

04:39.330 --> 04:42.810
So due to that we are going to do it manually.

04:42.810 --> 04:45.120
So let's see how we are going to do it.

04:45.120 --> 04:47.700
So we are going to take the same GSN file whatever

04:47.700 --> 04:49.200
we specified here, right?

04:49.200 --> 04:52.560
So we are going to copy it, open it in new window

04:52.560 --> 04:55.590
and then entire thing we are going to copy, right?

04:55.590 --> 04:59.580
And then we'll go to AWS management console and we'll go

04:59.580 --> 05:03.141
to IA and we'll create this policy manually

05:03.141 --> 05:05.700
by doing little bit of tweaks for it.

05:05.700 --> 05:09.720
Okay? So this is the policies and here we are going to

05:09.720 --> 05:13.290
create a new policy and in GSN whatever we have copied

05:13.290 --> 05:17.280
remove the whatever existing here and then paste it, right?

05:17.280 --> 05:21.660
So whatever you have copied there from this location, you

05:21.660 --> 05:24.300
paste it here and then go to visual editor.

05:24.300 --> 05:27.390
What it'll do is it'll validate whether this GSN is valid

05:27.390 --> 05:28.223
or not.

05:28.223 --> 05:30.962
And you can see here you are getting one error related

05:30.962 --> 05:32.163
to ELB, right?

05:32.163 --> 05:35.640
So I really don't want inside that and then fix that error

05:35.640 --> 05:37.190
remove or whatever it is, okay?

05:37.190 --> 05:40.440
So what I'll do is I'll click on additional permissions here

05:40.440 --> 05:44.117
and then choose a service which is nothing but ELB, right?

05:44.117 --> 05:47.430
And I'll give all ELB actions, okay?

05:47.430 --> 05:51.030
And then I'll go to resources and then say all resources

05:51.030 --> 05:52.890
right? So I'll minimize this so

05:52.890 --> 05:55.260
that now ELB all actions have got it.

05:55.260 --> 05:56.850
So and here for this

05:56.850 --> 05:59.460
ELB, whatever the error it is throwing

05:59.460 --> 06:01.860
I am going to remove that, right?

06:01.860 --> 06:04.680
So now that ELB is removed with 33 actions

06:04.680 --> 06:08.670
whatever has warning and new ELB is added with all actions.

06:08.670 --> 06:10.410
So I'll review the policy

06:10.410 --> 06:12.870
and provide the name of my policy, right?

06:12.870 --> 06:14.010
So name of my policy

06:14.010 --> 06:17.910
ALB Ingress controller IAM

06:17.910 --> 06:19.440
policy, right?

06:19.440 --> 06:21.870
And my description is going to be whatever I

06:21.870 --> 06:24.420
have put it here, this API, this IAM policy

06:24.420 --> 06:28.080
will allow our ALB Ingress controller part to make calls

06:28.080 --> 06:30.690
to AWS APIs, right?

06:30.690 --> 06:34.470
So now if you see this, this respective

06:34.470 --> 06:37.770
to Ingress controller part, whatever we are going to create

06:37.770 --> 06:40.770
it will be able to manage certificate manager,

06:40.770 --> 06:45.770
cognitive user pools and then EC2, ELB, ELBV2

06:45.840 --> 06:49.590
right? IAM resource group tagging shield and web

06:49.590 --> 06:51.600
application firewall, web application firewall

06:51.600 --> 06:54.060
regional and then WAFV2 also.

06:54.060 --> 06:56.820
So all the things this respect to ALB

06:56.820 --> 06:59.530
Ingress controller port is going to get access

07:00.600 --> 07:03.150
from AWS services perspective, right?

07:03.150 --> 07:06.480
Close to 233 services it is going to get access.

07:06.480 --> 07:08.823
So now I'm going to create a policy here,

07:09.735 --> 07:10.568
right?

07:10.568 --> 07:12.390
So once the policy is created

07:12.390 --> 07:15.870
so sets for that policy, right?

07:15.870 --> 07:20.820
And then make a note of this entire policy ARN, okay?

07:20.820 --> 07:23.100
So which we are going to use when we are

07:23.100 --> 07:26.814
creating the IAM role using EKSCTL.

07:26.814 --> 07:30.150
So let's make a note of this policy.

07:30.150 --> 07:33.240
So if you see here in the steps also I have provided

07:33.240 --> 07:36.390
so make a note of that policy error.

07:36.390 --> 07:38.760
So it is going to be same, it's not going to change.

07:38.760 --> 07:42.240
So for me, so now I'm going to create an IAM role

07:42.240 --> 07:45.347
for this ALB Ingress controller and attach that role

07:45.347 --> 07:47.220
to the service account, which is nothing

07:47.220 --> 07:51.090
but whatever the IAM role created that is going to

07:51.090 --> 07:55.920
be annotated on our service accounting Kubernetes cluster.

07:55.920 --> 07:59.730
So AWS IAM role we can create using EKSCTL.

07:59.730 --> 08:03.180
And if your cluster is created with EKSCTL

08:03.180 --> 08:06.570
then only you can use this option to create it.

08:06.570 --> 08:09.210
Else you need to create it manually and

08:09.210 --> 08:10.380
in manual process there

08:10.380 --> 08:12.810
is lot of things you need to work on which is going

08:12.810 --> 08:14.670
to be a problem for you.

08:14.670 --> 08:17.940
And one important thing here is you should have

08:17.940 --> 08:21.540
already means like if this step is not executed

08:21.540 --> 08:23.253
so which step I'll tell you.

08:24.510 --> 08:29.010
So if you go in the EKS create cluster using EKSCTL

08:29.010 --> 08:30.510
there will be something called

08:31.410 --> 08:34.393
step 02 in 02.

08:35.520 --> 08:36.930
Let me go there.

08:36.930 --> 08:40.860
So 01-02, there will be one step called create

08:40.860 --> 08:44.220
an associate, IAM ODC provider for EKS cluster.

08:44.220 --> 08:46.440
So during the creation of the cluster itself

08:46.440 --> 08:47.910
we have implemented it.

08:47.910 --> 08:51.840
So if this step is not implemented then whatever

08:51.840 --> 08:52.680
we are doing here

08:52.680 --> 08:54.840
right? So whatever we are doing here with

08:54.840 --> 08:57.240
EKSCTL create IAM service account

08:57.240 --> 08:59.310
this is going to throw an error.

08:59.310 --> 09:01.350
So just a reminder for you here.

09:01.350 --> 09:04.890
So now if it is only a EKSCTL manager cluster

09:04.890 --> 09:06.690
you can use this option.

09:06.690 --> 09:09.780
So now this command line will create an AWS IAM

09:09.780 --> 09:12.780
role and bounce that to the Kubernetes service account.

09:12.780 --> 09:14.880
So let's see what is this command, right?

09:14.880 --> 09:18.720
So EKSCTL create IAM service account and region

09:18.720 --> 09:21.690
code you need to provide here US east one we are using

09:21.690 --> 09:24.000
I have provided and name.

09:24.000 --> 09:26.490
So this name is nothing but what is your service

09:26.490 --> 09:27.323
account name?

09:27.323 --> 09:29.490
So EKS service account name that need to be bound

09:29.490 --> 09:31.710
to the newly created IAM role.

09:31.710 --> 09:33.000
So my service account name

09:33.000 --> 09:35.940
whatever we just described and seen everything, right?

09:35.940 --> 09:38.370
So if you can see here,

09:38.370 --> 09:40.740
so you have seen that, right?

09:40.740 --> 09:45.210
So this is the service account name ALB Ingress controller

09:45.210 --> 09:46.043
right?

09:46.043 --> 09:48.540
So the same service account name we are providing here

09:48.540 --> 09:50.250
and the name space is Cube System

09:50.250 --> 09:53.834
and the cluster is EKS Demo one and the attached

09:53.834 --> 09:57.030
policy error in which we make made a note here, right?

09:57.030 --> 09:58.290
The same thing, policy error

09:58.290 --> 10:00.450
and we are going to paste it here

10:00.450 --> 10:03.480
and we are going to override existing service account

10:03.480 --> 10:04.680
and then approve it.

10:04.680 --> 10:05.513
That's all.

10:05.513 --> 10:07.320
Okay? So we are going to override

10:07.320 --> 10:09.900
and then add the Kubernetes annotation here

10:09.900 --> 10:12.780
with the cluster AR and whatever is provided.

10:12.780 --> 10:15.477
Okay? So cluster means like the role IAM role AR

10:15.477 --> 10:17.790
and whatever after creation it provides

10:17.790 --> 10:19.290
that one we are going to annotate it

10:19.290 --> 10:22.050
on this ALB Ingress controller service account.

10:22.050 --> 10:24.180
So let's go ahead and then create this

10:24.180 --> 10:26.340
and then verify all those steps one by one.

10:26.340 --> 10:30.390
Okay? So let me copy and then

10:30.390 --> 10:32.490
paste it, right?

10:32.490 --> 10:36.780
So once created, so we need to test all this stuff, okay?

10:36.780 --> 10:41.010
So we have close to four, three verification steps here.

10:41.010 --> 10:43.590
So let's go ahead and then verify them.

10:43.590 --> 10:46.500
So it is creating, so if you see here it is going to

10:46.500 --> 10:51.500
create a Kubernetes cloud formation stack as part

10:51.630 --> 10:54.030
of this, which means to create that role, it is going to

10:54.030 --> 10:56.580
create a cloud formation stack.

10:56.580 --> 10:58.530
So if you want to delete this role, you can go

10:58.530 --> 11:01.350
and then directly delete that respective cloud

11:01.350 --> 11:02.820
formation stack.

11:02.820 --> 11:07.170
So it is saying deploying the stack, EKSCTL, EKS demo

11:07.170 --> 11:09.668
add on IAM service account cube system

11:09.668 --> 11:12.090
ALB Ingress controller.

11:12.090 --> 11:15.570
So let's wait for it to be get created and then

11:15.570 --> 11:16.683
we can move on.

11:18.450 --> 11:20.460
Mostly it would have been created now.

11:20.460 --> 11:22.020
Yeah, it got created.

11:22.020 --> 11:25.990
So now let's go ahead and then

11:27.690 --> 11:28.680
go to verify it.

11:28.680 --> 11:31.710
Okay, so we are going to say EKSCTL get IAM service

11:31.710 --> 11:34.830
account in cluster EKS Demo one.

11:34.830 --> 11:38.160
So it'll provide all the IAM service accounts created

11:38.160 --> 11:40.365
using EKSCTL.

11:40.365 --> 11:41.920
So let me paste it

11:45.630 --> 11:47.610
and we get the information.

11:47.610 --> 11:49.650
So ALB Ingress controller

11:49.650 --> 11:52.530
that is the IAM service account and which is

11:52.530 --> 11:55.500
attached to this respective IAM role.

11:55.500 --> 11:58.680
So we can also verify in our cloud formation template.

11:58.680 --> 12:01.677
So we can go to services, let me close this

12:01.677 --> 12:03.960
whatever the cluster role binding stuff.

12:03.960 --> 12:06.180
Yeah. So we can go here

12:06.180 --> 12:11.010
and then we can go to cloud formation, right?

12:11.010 --> 12:13.710
And in cloud formation we'll go

12:13.710 --> 12:17.040
to this respective stack which has created latest today.

12:17.040 --> 12:19.980
Okay, so if I go here you can see

12:19.980 --> 12:22.380
that it created EKSCTL EKS Demo one

12:22.380 --> 12:24.152
add on IAM service account.

12:24.152 --> 12:25.900
Okay? So if you see here

12:27.300 --> 12:30.330
in outputs so this is the role it has created

12:30.330 --> 12:32.447
and you can see on the click on the resources

12:32.447 --> 12:34.950
and if you click on this respective resources

12:34.950 --> 12:37.230
it'll take us to the IAM management consult

12:37.230 --> 12:40.140
that respective role in role section, right?

12:40.140 --> 12:42.420
So and now if you see this respective

12:42.420 --> 12:45.750
role is associated with the ALB Ingress controller policy

12:45.750 --> 12:48.660
because here in this step you have provided

12:48.660 --> 12:51.540
that the policy AR and what it need to attach.

12:51.540 --> 12:54.150
So that's the reason it attached this policy.

12:54.150 --> 12:56.640
So now we have created our IAM policy

12:56.640 --> 13:00.060
IAM role and also Kubernetes service account.

13:00.060 --> 13:03.210
So final verification is on the Kubernetes service

13:03.210 --> 13:05.760
account named ALB Ingress controller.

13:05.760 --> 13:09.150
So do we have this annotation available or not, right?

13:09.150 --> 13:12.300
So let's go ahead and then describe the ALB

13:12.300 --> 13:15.450
Ingress controller Kubernetes service account.

13:15.450 --> 13:16.283
Okay?

13:17.310 --> 13:21.990
So let me say clear and paste it, right?

13:21.990 --> 13:26.990
And once it provides the information, you can see it here

13:27.240 --> 13:31.470
in the annotations EKS Amazon AWS.com role

13:31.470 --> 13:35.350
AR and AWS whatever the

13:36.420 --> 13:37.710
account number and the role

13:37.710 --> 13:39.090
whatever it is created.

13:39.090 --> 13:39.923
So this role

13:39.923 --> 13:43.560
you can see it here one year CXR YJ1 at the end.

13:43.560 --> 13:45.780
Okay, so let's come back to our UI.

13:45.780 --> 13:47.340
You can see YJ1.

13:47.340 --> 13:50.070
See, so now this role is annotated here

13:50.070 --> 13:52.560
in the Kubernetes service account.

13:52.560 --> 13:53.910
So which tells us

13:53.910 --> 13:57.450
that whoever uses this ALB Ingress controller

13:57.450 --> 14:01.860
service account, they get the access to these AWS services

14:01.860 --> 14:05.490
whatever it is present inside this policy.

14:05.490 --> 14:07.620
So all these services it gets access

14:07.620 --> 14:09.240
to based on whatever it is provided.

14:09.240 --> 14:10.680
So whether it is list and read

14:10.680 --> 14:13.114
or read or full access or whatever it is, right?

14:13.114 --> 14:16.410
So that's about the steps.

14:16.410 --> 14:18.300
Whatever we have implemented as part

14:18.300 --> 14:22.500
of ALB Ingress controller prerequisite steps

14:22.500 --> 14:24.240
in our next lecture, we'll focus

14:24.240 --> 14:28.890
on deploying the ALB Ingress controller and then testing it.

14:28.890 --> 14:30.630
So I'll see you in the next lecture.

14:30.630 --> 14:31.800
Until then, bye bye.

14:31.800 --> 14:32.633
Thank you.
