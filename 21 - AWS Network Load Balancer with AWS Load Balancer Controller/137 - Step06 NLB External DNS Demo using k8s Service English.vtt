WEBVTT

00:00.360 --> 00:01.320
-: Welcome back.

00:01.320 --> 00:03.660
In this section we are going to implement

00:03.660 --> 00:06.270
network load balancer with external DNS

00:06.270 --> 00:08.790
using Kubernetes service.

00:08.790 --> 00:12.540
So as part of that we are going to add additional annotation

00:12.540 --> 00:15.690
to our Kubernetes service manifest.

00:15.690 --> 00:19.500
So all these things we have implemented till previous demo.

00:19.500 --> 00:22.710
So now we are going to add external DNS host name

00:22.710 --> 00:26.400
related annotation to our Kubernetes service.

00:26.400 --> 00:28.260
So what happens at this point?

00:28.260 --> 00:31.890
So whenever you deploy your Kubernetes service

00:31.890 --> 00:34.290
with this annotation added,

00:34.290 --> 00:38.130
so we already deploy the external DNS related pod

00:38.130 --> 00:41.100
on our AKS cluster whenever we are implementing

00:41.100 --> 00:44.070
the ALB ingress related use cases.

00:44.070 --> 00:46.590
So this external DNS pod

00:46.590 --> 00:50.070
will be watching this (indistinct) API server

00:50.070 --> 00:53.310
for any ingress R service resources

00:53.310 --> 00:57.600
which contains external DNS host name annotation.

00:57.600 --> 01:01.680
If it finds, then automatically it is going to go ahead

01:01.680 --> 01:04.200
and then pick that respect to annotation

01:04.200 --> 01:05.520
and create our update

01:05.520 --> 01:09.750
or delete the DNS recording AWS route 53.

01:09.750 --> 01:12.240
So once the DNS record is added,

01:12.240 --> 01:16.740
so we can access our application with HTTP or HTTPS

01:16.740 --> 01:19.740
using the DNS name, whatever we have registered.

01:19.740 --> 01:24.740
Example, NLB EXT DNS dot stack simplify dot com.

01:24.780 --> 01:26.970
So now at this point already

01:26.970 --> 01:29.580
our SSL certificate we have created is

01:29.580 --> 01:31.500
star dot stack simplify dot com.

01:31.500 --> 01:34.680
So this NLB EXT DNS dot stack simplify dot com,

01:34.680 --> 01:37.830
whenever you access, this time you should not any,

01:37.830 --> 01:41.520
get any SSL certificate pop-up error what we have got

01:41.520 --> 01:44.370
in our previous PLS demo.

01:44.370 --> 01:48.360
So now let's see the same network design here, right?

01:48.360 --> 01:50.820
So we are going to add the external DNS

01:50.820 --> 01:54.360
and when we deploy this network load balancer related

01:54.360 --> 01:56.190
Kubernetes service manifest,

01:56.190 --> 01:59.910
so it is going to add the DNS in the Amazon route 53

01:59.910 --> 02:02.790
and whenever we access we will be able to access both

02:02.790 --> 02:06.600
via HTPP, HTTPS and the requests

02:06.600 --> 02:09.270
go to our respective network load balancer

02:09.270 --> 02:12.180
and to our respective pod in the worker nodes

02:12.180 --> 02:13.920
via node ports.

02:13.920 --> 02:16.320
And this is the annotation we are going to add,

02:16.320 --> 02:19.650
external DNS dot all four dot Kubernetes dot IO slash

02:19.650 --> 02:22.560
host name and we'll define the DNS name here,

02:22.560 --> 02:27.560
something like NLB DNS 1, 0, 1 dot stack simplify dot com.

02:27.600 --> 02:30.810
So let's go back to our GitHub repository

02:30.810 --> 02:34.860
and enter into the section 19 ELB network load balancer

02:34.860 --> 02:39.860
with LBC and inside that 19, 0, 3 LBC and LB external DNS.

02:40.980 --> 02:43.500
And here we'll go and then verify

02:43.500 --> 02:45.690
whether this respective entry is present

02:45.690 --> 02:47.250
in the kube manifest.

02:47.250 --> 02:49.770
So let's go to Visual Studio Code

02:49.770 --> 02:53.880
and we are entering the section 19, 0, 3 LBC NLB

02:53.880 --> 02:58.260
external DNS and inside that, zero, one NGINX app three

02:58.260 --> 03:00.630
is going to be same as previous demos.

03:00.630 --> 03:05.630
So we'll go to zero, two, LBC NLB load balancer service,

03:05.700 --> 03:09.390
right and you can see external DNS related record

03:09.390 --> 03:11.850
is added here right?

03:11.850 --> 03:14.970
And you have the port 80 and 4, 4, 3 listeners,

03:14.970 --> 03:17.340
so that you will be able to access your application

03:17.340 --> 03:20.580
with port 80 and also with 4, 4, 3.

03:20.580 --> 03:24.300
So now let's come back to our terminal here

03:24.300 --> 03:29.300
and enter into the section 19, 0, 3, LBC NLB external DNS

03:30.570 --> 03:33.120
and verify our kube manifest

03:33.120 --> 03:38.100
and then say kubectl, apply hyphen F kube manifest

03:38.100 --> 03:41.640
and let's wait for it to get created.

03:41.640 --> 03:44.393
So we can see here app three NGINX deployment

03:44.393 --> 03:47.820
and EXT DNS LBC network LBS created.

03:47.820 --> 03:49.770
So if you see here the name also,

03:49.770 --> 03:52.230
as per the demo usually we change it

03:52.230 --> 03:55.110
in the metadata section, right?

03:55.110 --> 03:58.290
So EXT DNS LBC network LB

03:58.290 --> 04:01.200
and same we have mentioned for the load balancer name also,

04:01.200 --> 04:04.530
here the same thing, so now let's come back here

04:04.530 --> 04:08.760
and verify the ports, services and if you want

04:08.760 --> 04:11.430
you can also verify the controller port locks.

04:11.430 --> 04:16.430
But now we'll come here, kubectl and get pods.

04:17.040 --> 04:20.220
Our app three NGINX should be running right

04:20.220 --> 04:22.530
and before deploying this kube manifest,

04:22.530 --> 04:25.080
you need to always ensure that,

04:25.080 --> 04:29.580
so whether you have the external DNS port running, right.

04:29.580 --> 04:31.320
So before deploying only you need to check

04:31.320 --> 04:35.097
because you are, you added the external DNS related host

04:35.097 --> 04:37.170
and annotation in your service.

04:37.170 --> 04:39.000
So we can see it's already running.

04:39.000 --> 04:42.120
So obviously you can do this deployment, right?

04:42.120 --> 04:43.950
So it's already running here.

04:43.950 --> 04:47.700
So now let's come back here and we have verified the pods

04:47.700 --> 04:49.860
and we'll also verify the services

04:49.860 --> 04:51.930
and the service should be created for us

04:51.930 --> 04:55.290
EXT DNS LBC network LB

04:55.290 --> 04:58.590
and you can see that DNS name for the same thing.

04:58.590 --> 05:01.890
Another important thing, you need to verify easier

05:01.890 --> 05:03.900
external DNS logs.

05:03.900 --> 05:07.470
So this is the command to verify your external DNS pod logs.

05:07.470 --> 05:10.950
Either you can say kubectl, get pods

05:10.950 --> 05:15.210
and you can also say kubectl logs hyphen F

05:15.210 --> 05:19.410
and your external DNS pod logs, you can verify this way also

05:19.410 --> 05:22.803
or you can directly give this command and then verify.

05:23.970 --> 05:26.550
So let's wait for the logs to roll

05:26.550 --> 05:27.990
and we'll get the final log

05:27.990 --> 05:32.670
wherein whether it has created the NLB DNS 1, 0, 1

05:32.670 --> 05:36.630
in our route 53 or not, it is going to show us.

05:36.630 --> 05:38.460
So we can see here the desired change,

05:38.460 --> 05:43.080
it created NLB DNS 1, 0, 1 in our route 53 service.

05:43.080 --> 05:44.790
So let's go here

05:44.790 --> 05:48.633
and start with first the route 53 service, right?

05:49.500 --> 05:52.320
And our DNS should be added here,

05:52.320 --> 05:57.150
so go to hosted zones and go to www.stacksimplify.com

05:57.150 --> 06:02.150
and in www.stacksimplify.com NLB DNS 1, 0, 1 is added, good.

06:03.690 --> 06:08.460
So now we'll also go to our load balancer here, right?

06:08.460 --> 06:12.000
And our load balancer EXT DNS LBC network LB

06:12.000 --> 06:13.500
is currently provisioning.

06:13.500 --> 06:16.620
So port 80 listener, you have Port 4, 4, 3 listener you have

06:16.620 --> 06:19.350
and you'll also see the target groups.

06:19.350 --> 06:21.780
Two target groups for two listeners

06:21.780 --> 06:23.850
and let's see if they are healthy.

06:23.850 --> 06:26.130
So they are in the registration state.

06:26.130 --> 06:29.370
So let's wait for the load balancer to become active.

06:29.370 --> 06:33.430
Let's go back to target groups and refresh

06:34.350 --> 06:36.060
and they are still registering

06:36.060 --> 06:38.280
so let's wait for them to be healthy.

06:38.280 --> 06:41.520
After that we can go ahead and then access the stuff.

06:41.520 --> 06:45.000
So in meantime we can do the NS lookup, test.

06:45.000 --> 06:47.100
So let's come back here

06:47.100 --> 06:51.720
and say NS lookup NLB DNS 1, 0, 1 stack simplify dot com.

06:51.720 --> 06:54.810
So it is resolving to two IP addresses for us

06:54.810 --> 06:58.380
and this should be same as the NLB DNS name.

06:58.380 --> 07:02.160
So let me refresh, this seems to, one should be healthy.

07:02.160 --> 07:06.570
Let's come back here and this is the NLB DNS, right?

07:06.570 --> 07:10.770
So that custom DNS and this DNS should resolve

07:10.770 --> 07:15.770
to the same IPs and you can see both are same, good.

07:18.630 --> 07:22.950
So now let's wait for the load balancer related

07:22.950 --> 07:25.440
target groups to be healthy.

07:25.440 --> 07:29.490
So both are healthy, let's also verify the second one

07:29.490 --> 07:31.650
and both are healthy here also.

07:31.650 --> 07:36.300
So now let's go here and access with the URL

07:36.300 --> 07:39.570
HTTP and also HTTPS.

07:39.570 --> 07:42.780
So this is the HTTP one and HTTPS

07:42.780 --> 07:46.470
also should not throw any SSL pop-up, right?

07:46.470 --> 07:48.000
You can see the lock symbol here.

07:48.000 --> 07:50.730
This is non-secure, which is HTTP

07:50.730 --> 07:54.660
and this is secure and it doesn't throw any SSL pop-up,

07:54.660 --> 07:58.050
because the domain matches star dot stack simplify dot com

07:58.050 --> 08:01.170
off over SSL certificate matches here.

08:01.170 --> 08:05.040
So now go to connection is secure, certificate is valid

08:05.040 --> 08:08.520
and star dot stack simplify dot com right?

08:08.520 --> 08:11.940
So this completes the external DNS demo

08:11.940 --> 08:13.920
for network load balancer.

08:13.920 --> 08:18.060
So we'll go here and clean up the stuff kubectl,

08:18.060 --> 08:20.850
delete hyphen F, kube manifest.

08:20.850 --> 08:24.000
So this should delete our app three NGINX deployment

08:24.000 --> 08:26.823
and EXT DNS LBC network LB.

08:27.750 --> 08:30.480
And let's come back here and verify always

08:30.480 --> 08:34.080
whether your load balancer successfully deleted or not.

08:34.080 --> 08:37.740
And if you want you can also verify your DNS record,

08:37.740 --> 08:39.480
so whether it is deleted or not.

08:39.480 --> 08:44.480
So we can go here first and take the logs, right?

08:45.120 --> 08:46.380
So let's come back here

08:46.380 --> 08:49.060
and this is the command for external DNS logs

08:50.010 --> 08:52.260
and let's wait for the logs to display

08:52.260 --> 08:55.170
whether it has deleted or not.

08:55.170 --> 08:58.980
So we can see here delete NLB DNS 1, 0, 1 dot

08:58.980 --> 09:00.360
stack simplify dot com.

09:00.360 --> 09:04.650
So if you go here to www.stacksimplify.com.

09:04.650 --> 09:09.650
So you should find nothing related to NLB DNS 1, 0, 1.

09:10.650 --> 09:13.770
I'll see you in the next lecture with another NLB demo.

09:13.770 --> 09:15.000
Until then, bye bye.

09:15.000 --> 09:15.833
Thank you.
