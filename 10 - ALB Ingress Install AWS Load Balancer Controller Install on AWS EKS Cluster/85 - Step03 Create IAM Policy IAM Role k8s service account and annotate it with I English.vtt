WEBVTT

00:00.540 --> 00:01.860
-: Welcome back.

00:01.860 --> 00:04.740
As part of step two and then step three,

00:04.740 --> 00:07.350
we are going to create the IAM policy,

00:07.350 --> 00:09.100
IAM role, and also,

00:09.100 --> 00:12.360
create a load balancer controller service account

00:12.360 --> 00:13.560
in Kubernetes,

00:13.560 --> 00:16.380
and annotate that respective service account

00:16.380 --> 00:18.810
with this respective IAM role.

00:18.810 --> 00:21.540
So let's go back to our GithHub repository,

00:21.540 --> 00:23.250
and as part of step two,

00:23.250 --> 00:26.370
we are going to create a IAM policy.

00:26.370 --> 00:29.070
So here, whatever we are going to create,

00:29.070 --> 00:32.310
we are going to take the latest version.

00:32.310 --> 00:33.750
So we'll go to our

00:33.750 --> 00:38.010
directory 08 New ELB application load balancers.

00:38.010 --> 00:42.360
So let's go to the terminal here, and clear this.

00:42.360 --> 00:46.680
And we are in AWS EKS Kubernetes Masterclass Internal,

00:46.680 --> 00:47.513
in my case.

00:47.513 --> 00:49.434
In your case it is going to be

00:49.434 --> 00:52.500
AWS EKS Kubernetes Masterclass.

00:52.500 --> 00:57.500
And we'll go inside 08 New ELB application load balancers.

00:59.040 --> 01:04.040
And inside that, we are going inside 0 8 0 1

01:04.320 --> 01:07.200
load balancer controller install.

01:07.200 --> 01:11.017
And inside this, if you see here, I already have the files,

01:11.017 --> 01:16.017
"IAM policy latest" and "IAM policy V231.json."

01:16.380 --> 01:19.620
So what I'm going to do is, whatever I have existing one,

01:19.620 --> 01:23.190
I'm going to remove this "IAM policy latest" one.

01:23.190 --> 01:28.190
And using this ctl-0 and IAM policy latest.json,

01:28.500 --> 01:33.000
and I'm going to download this policy from this location.

01:33.000 --> 01:37.733
So let me go here and copy this entire line. Copy.

01:38.790 --> 01:43.410
And if you see here, already, my IAM policy latest file

01:43.410 --> 01:46.920
was already removed as part of RN command.

01:46.920 --> 01:51.750
So I'll run this command ctl-0 IAM policy latest json.

01:51.750 --> 01:54.690
So it has downloaded the latest file here.

01:54.690 --> 01:56.580
So if I say, LS LRTA,

01:56.580 --> 01:59.880
so you can find the IAM policy latest file.

01:59.880 --> 02:02.130
So you can review that directly

02:02.130 --> 02:04.950
in our visual studio code here,

02:04.950 --> 02:09.750
and go to that 08 new ELB application load balancers,

02:09.750 --> 02:13.470
and inside 0 8 0 1 load balancer controller install.

02:13.470 --> 02:17.010
So you, if you open this IAM latest policy.json,

02:17.010 --> 02:19.650
so you can find here, in detail,

02:19.650 --> 02:22.110
the policy related permissions, right?

02:22.110 --> 02:24.960
So all these are the things it is required for us.

02:24.960 --> 02:27.630
So there are lot of permissions required for us,

02:27.630 --> 02:29.250
and all these are outlined here,

02:29.250 --> 02:32.700
out of the box from AWS perspective.

02:32.700 --> 02:34.530
So now if we come back here,

02:34.530 --> 02:37.350
if you want to use any specific version,

02:37.350 --> 02:39.450
so the file name you need to create it, with,

02:39.450 --> 02:41.280
is with that specific version,

02:41.280 --> 02:44.430
and you need to find this file with that specific version.

02:44.430 --> 02:46.260
So if you in Kubernetes 6,

02:46.260 --> 02:51.260
the repository name is AWS load balancer controller.

02:51.690 --> 02:55.110
So I'll go to github.com/,

02:55.110 --> 02:59.400
and I'll go to that load balancer controller.

02:59.400 --> 03:04.400
And if you come back here, and in main docs install, right,

03:04.620 --> 03:06.960
so if you go to, inside this folder,

03:06.960 --> 03:10.050
you will have something called docs folder.

03:10.050 --> 03:13.620
And inside docs folder, in install folder, right?

03:13.620 --> 03:14.790
So in install folder,

03:14.790 --> 03:17.970
you can find the IAM policy .json,

03:17.970 --> 03:20.520
which is the latest one, right?

03:20.520 --> 03:22.770
And you can use that one,

03:22.770 --> 03:25.590
or, you can go for a specific version,

03:25.590 --> 03:30.590
which is related to V2.3.1 or V2.3.2, et cetera,

03:32.130 --> 03:35.610
directly by specifying that version number here.

03:35.610 --> 03:38.670
And accordingly, you can download that version.

03:38.670 --> 03:41.250
So we are going to use, always, latest.

03:41.250 --> 03:44.310
So that's the reason I have provided the latest,

03:44.310 --> 03:46.980
means like, the root repository related,

03:46.980 --> 03:50.640
main repository, main branch related information here.

03:50.640 --> 03:51.810
So you can see here,

03:51.810 --> 03:55.290
so main docs install IAM policy.json,

03:55.290 --> 03:59.670
which is referring to the latest file here, right?

03:59.670 --> 04:01.500
So now let's come back here.

04:01.500 --> 04:05.190
And we have successfully downloaded that respective file

04:05.190 --> 04:10.190
in this folder, AWS 80801 load balancer controller install.

04:11.700 --> 04:13.050
And now, we are going to do is,

04:13.050 --> 04:15.870
we are going to create a IAM policy.

04:15.870 --> 04:18.297
And policy name, we are going to provide is,

04:18.297 --> 04:21.240
AWS load balancer controller IAM policy,

04:21.240 --> 04:23.910
and the policy document we are going to reference

04:23.910 --> 04:27.870
from file colon slash slash and our file name,

04:27.870 --> 04:31.830
which is in that respective current working directory.

04:31.830 --> 04:34.110
So we are going to create a policy using the

04:34.110 --> 04:39.110
AWS CLI command, AWS IAM create policy.

04:39.150 --> 04:42.360
So let me copy this and paste it here.

04:42.360 --> 04:45.960
And this should create the IAM policy for us.

04:45.960 --> 04:48.420
So it has created the IAM policy.

04:48.420 --> 04:51.270
And this is the ARN it has created for us.

04:51.270 --> 04:54.000
So we need to make a note of this ARN because

04:54.000 --> 04:57.330
we are going to reference that in upcoming sections.

04:57.330 --> 05:00.300
So for me, this is my AWS account ID,

05:00.300 --> 05:03.030
and remaining things are going to be same for you also,

05:03.030 --> 05:05.730
your account ID usually will differ,

05:05.730 --> 05:07.590
but rest all is going to be same.

05:07.590 --> 05:11.340
So anyway, I'm going to copy this and come back here,

05:11.340 --> 05:13.290
and I'll say, file new file,

05:13.290 --> 05:17.010
and just save this ARN here for a while.

05:17.010 --> 05:18.630
Now let's come back,

05:18.630 --> 05:21.570
and we have successfully created the IAM policy.

05:21.570 --> 05:25.740
So let's, in AWS services, go to IAM service,

05:25.740 --> 05:27.870
and search for this policy.

05:27.870 --> 05:30.240
So this is policy we have created.

05:30.240 --> 05:32.970
So let me copy this policy name,

05:32.970 --> 05:36.990
and in go to policies and search for that policy.

05:36.990 --> 05:38.730
And you'll find this policy,

05:38.730 --> 05:41.220
which is a customer manager policy,

05:41.220 --> 05:43.920
and inside that, all these are the information,

05:43.920 --> 05:45.450
whatever it is going to provide.

05:45.450 --> 05:47.850
Means like, the access we are going to get

05:47.850 --> 05:50.460
as part of this policy, right?

05:50.460 --> 05:53.970
So now, let's come back here.

05:53.970 --> 05:55.710
And if there are any errors also,

05:55.710 --> 05:57.450
we really don't need to worry.

05:57.450 --> 06:02.130
But just make a note of the policy ARN. That's good.

06:02.130 --> 06:04.830
So now, in the next step, we are going to create a

06:04.830 --> 06:08.340
IAM role for the AWS load balancer controller,

06:08.340 --> 06:12.240
and add as the role to the Kubernetes service account.

06:12.240 --> 06:16.920
So for this, we are going to use the eksctl, right?

06:16.920 --> 06:20.100
So using eksctl, we can do that.

06:20.100 --> 06:23.370
eksctl directly have a command called,

06:23.370 --> 06:26.340
create IAM service account.

06:26.340 --> 06:27.360
So which means,

06:27.360 --> 06:32.070
it will create a service account in Kubernetes,

06:32.070 --> 06:36.930
and also create a IAM role in AWS IAM service,

06:36.930 --> 06:38.550
and associate the policy,

06:38.550 --> 06:41.250
whatever we have created to that IAM role,

06:41.250 --> 06:43.680
and take that IAM roles ARN,

06:43.680 --> 06:47.010
and then annotate it in the Kubernetes service account.

06:47.010 --> 06:51.360
So all this with the single eksctl command,

06:51.360 --> 06:53.430
we are going to do that.

06:53.430 --> 06:56.040
And we really don't need to worry about

06:56.040 --> 06:58.620
manually implementing all these things.

06:58.620 --> 07:02.490
So applicable only with eksctl manager clusters.

07:02.490 --> 07:05.370
And our cluster we have created with eksctl.

07:05.370 --> 07:06.750
And we are going to do,

07:06.750 --> 07:08.400
successfully, how we are going to do it?

07:08.400 --> 07:10.080
We are going to see now.

07:10.080 --> 07:13.170
So this command line will create a AWS IAM role.

07:13.170 --> 07:15.360
Yes, and associate the IAM policy,

07:15.360 --> 07:16.860
whatever we have created.

07:16.860 --> 07:19.588
And also will create a Kubernetes service account

07:19.588 --> 07:20.700
in K8s cluster,

07:20.700 --> 07:23.430
and also annotate this Kubernetes service account

07:23.430 --> 07:25.710
with the IAM role ARN.

07:25.710 --> 07:27.150
So now let's come back here,

07:27.150 --> 07:29.250
and understand about that command.

07:29.250 --> 07:32.010
So before understanding about that command,

07:32.010 --> 07:36.180
so first verify in kube system namespace any service account

07:36.180 --> 07:40.050
with name AWS load balancer controller is present or not.

07:40.050 --> 07:42.570
So you can say here, come back here,

07:42.570 --> 07:46.830
and say, clear and kubectl get SCA.

07:46.830 --> 07:49.497
SCA is the earliest name first service account,

07:49.497 --> 07:52.680
and say hyphen N and kube system.

07:52.680 --> 07:55.140
In namespace kube system we are verifying,

07:55.140 --> 07:57.600
we are listing all the service accounts,

07:57.600 --> 07:59.790
And on the top, we'll verify in the,

07:59.790 --> 08:02.310
it will come in the alphabetical order.

08:02.310 --> 08:05.040
And on the top, we'll verify if there is anything with

08:05.040 --> 08:07.980
AWS load balancer controller.

08:07.980 --> 08:11.670
So with AWS, you can see AWS Cloud Provider and AWS node,

08:11.670 --> 08:14.040
but nothing else is provided here.

08:14.040 --> 08:17.430
So anyway, if you want you can provide the exact name,

08:17.430 --> 08:19.200
and then also, search.

08:19.200 --> 08:20.790
So we'll search with this name,

08:20.790 --> 08:23.520
and AWS load balancer controller,

08:23.520 --> 08:25.410
and it is saying that no service accounts

08:25.410 --> 08:28.200
with that name are found currently.

08:28.200 --> 08:31.470
Now let's come back here and understand this command,

08:31.470 --> 08:36.470
which is eksctl create IAM service account.

08:36.660 --> 08:40.470
So for this command, we need to provide the cluster name,

08:40.470 --> 08:43.470
our EKS cluster name, which is EKS demo one,

08:43.470 --> 08:45.330
and this service account,

08:45.330 --> 08:47.340
in which namespace we need to provide,

08:47.340 --> 08:49.560
our Kubernetes service account, right?

08:49.560 --> 08:52.320
So in the namespace kube system we need to create,

08:52.320 --> 08:55.193
and name of my service account is going to be

08:55.193 --> 08:58.530
AWS load balancer controller.

08:58.530 --> 09:01.560
And the policy we are going to attach. Why?

09:01.560 --> 09:04.380
Because this create IAM service account is nothing,

09:04.380 --> 09:07.530
but with IAM, it is going to create a IAM role,

09:07.530 --> 09:08.983
and service account, it is going to create a

09:08.983 --> 09:10.920
Kubernetes service account.

09:10.920 --> 09:12.000
So, which means,

09:12.000 --> 09:15.840
for this IAM role you are going to attach your policy ARN.

09:15.840 --> 09:17.730
So whatever the policy you have created

09:17.730 --> 09:18.930
in the previous step.

09:18.930 --> 09:22.590
So its ARN, we need to provide here, right?

09:22.590 --> 09:26.250
And override existing service accounts is an additional tag,

09:26.250 --> 09:28.050
and if you want you can say approve, right?

09:28.050 --> 09:30.060
So this is the command we need to provide

09:30.060 --> 09:32.190
so that it will get created.

09:32.190 --> 09:35.580
So in my case, the cluster name is EKS demo one

09:35.580 --> 09:37.890
and namespace it need to create for everyone,

09:37.890 --> 09:39.750
it is going to be kube system,

09:39.750 --> 09:42.360
and for you, only if your cluster name is different,

09:42.360 --> 09:43.440
put it here.

09:43.440 --> 09:46.230
And name is AWS load balancer controller,

09:46.230 --> 09:48.030
which is my service account name.

09:48.030 --> 09:50.850
And attach policy ARN.

09:50.850 --> 09:53.010
So ARN, whatever we have made a node

09:53.010 --> 09:55.650
as part of previous step, this is the one, right?

09:55.650 --> 09:57.840
So the same thing you need to provide here.

09:57.840 --> 09:59.340
For me it is not going to change,

09:59.340 --> 10:02.310
because it's the same account ID, AWS account ID.

10:02.310 --> 10:05.700
In your case, this account ID changes, right?

10:05.700 --> 10:09.840
Or whatever the node you have made for your IAM policy.

10:09.840 --> 10:13.080
So the same thing you can replace here.

10:13.080 --> 10:16.620
And finally, you can take this command and run it.

10:16.620 --> 10:18.570
So let's come back here,

10:18.570 --> 10:23.400
and run the command eksctl create IAM service account.

10:23.400 --> 10:26.130
So let's wait for this command to execute

10:26.130 --> 10:27.750
and it need to create.

10:27.750 --> 10:31.470
So it is going to create a cloud formation stack for this.

10:31.470 --> 10:33.270
So we are going to see that. See.

10:33.270 --> 10:36.030
So creating IAM role for service account,

10:36.030 --> 10:39.237
and in kube system namespace it has created the

10:39.237 --> 10:42.780
AWS load balancer controller service account, right?

10:42.780 --> 10:44.790
So it has created the service account,

10:44.790 --> 10:49.110
and it is also deploying the stack, eksctl EKS demo one

10:49.110 --> 10:50.970
addon IAM service account

10:50.970 --> 10:52.770
kube system load balancer controller.

10:52.770 --> 10:55.530
So this is the cloud formation stack name.

10:55.530 --> 10:58.020
So it is deploying the cloud formation stack,

10:58.020 --> 11:00.480
and inside that we'll have all the automation

11:00.480 --> 11:01.890
to create all these things,

11:01.890 --> 11:05.340
and then associate it with the Kubernetes service account.

11:05.340 --> 11:09.090
So let's wait for this thing to get created.

11:09.090 --> 11:11.370
So we can see here, created service account

11:11.370 --> 11:15.060
kube system slash AWS load balancer controller.

11:15.060 --> 11:20.060
So let's come back here and verify using eksctl CLI.

11:20.070 --> 11:23.250
So let's start with, we'll do multiple verifications.

11:23.250 --> 11:25.290
So let's do one after the other.

11:25.290 --> 11:28.560
So we'll say, eksctl get IAM service account,

11:30.330 --> 11:32.790
and provide your cluster name, right?

11:32.790 --> 11:37.790
So hyphen hyphen cluster equal to EKS demo one.

11:39.180 --> 11:42.870
And if you remember earlier, when we have run this command,

11:42.870 --> 11:45.510
we have got no IAM service accounts,

11:45.510 --> 11:47.820
but after running the previous command,

11:47.820 --> 11:50.940
it should have created one service account for us, right?

11:50.940 --> 11:53.040
So in the kube system namespace,

11:53.040 --> 11:56.400
the service name is AWS load balancer controller,

11:56.400 --> 11:59.010
and it is associated with the role ARN,

11:59.010 --> 12:01.980
whatever is created in AWS IAM service.

12:01.980 --> 12:04.105
So the role name is going to be

12:04.105 --> 12:09.030
eksctl EKS demo one addon IAM service account kube role one

12:09.030 --> 12:13.230
and then some dynamic name generated here, right?

12:13.230 --> 12:15.540
And now, so let's come back here,

12:15.540 --> 12:17.640
and verify the cloud formation template

12:17.640 --> 12:20.910
eksctl created and IAM role.

12:20.910 --> 12:22.770
So let's go here

12:22.770 --> 12:27.770
and go to cloud formation service.

12:27.960 --> 12:31.020
Or, you can go to services

12:31.020 --> 12:33.810
and search, right?

12:33.810 --> 12:36.993
So I'll open a new window here,

12:40.606 --> 12:42.960
I'll say, I don't know.

12:42.960 --> 12:45.120
So for some, yeah I got it.

12:45.120 --> 12:48.750
So let's go to the cloud formation service here,

12:48.750 --> 12:50.793
and let's verify the same thing.

12:52.290 --> 12:53.123
So we have the

12:53.123 --> 12:57.120
eksctl EKS demo one addon IAM service account.

12:57.120 --> 12:59.160
So this is the stack name for us.

12:59.160 --> 13:01.020
So let's open it.

13:01.020 --> 13:03.120
And once we open it, right?

13:03.120 --> 13:04.950
Go inside the resources tab

13:04.950 --> 13:09.090
and click on the link physical ID to open the IAM role.

13:09.090 --> 13:12.600
So inside this, if you go to the resources tab,

13:12.600 --> 13:15.990
so you can find only one resource is present here.

13:15.990 --> 13:19.560
This is the resource which is nothing but a IAM role.

13:19.560 --> 13:22.200
The type is a AWS IAM role.

13:22.200 --> 13:23.760
So if you click on this,

13:23.760 --> 13:25.950
and if you want, you can open in the new tab,

13:25.950 --> 13:29.640
it will open the IAM role created for us, right?

13:29.640 --> 13:32.580
So this is the IAM role created,

13:32.580 --> 13:35.160
and it is associated with the policy,

13:35.160 --> 13:36.687
whatever we have created

13:36.687 --> 13:39.690
AWS load balancer controller IAM policy,

13:39.690 --> 13:41.400
it is associated with that.

13:41.400 --> 13:43.260
And you'll have that trust relations

13:43.260 --> 13:45.990
related to SDS assume role with,

13:45.990 --> 13:48.510
whereby identity and all these things.

13:48.510 --> 13:51.210
And now, let's come back here,

13:51.210 --> 13:53.770
and this is the ARN of this role,

13:53.770 --> 13:55.830
ARN and then so and so, so and so, right?

13:55.830 --> 13:58.530
So now let's come back here,

13:58.530 --> 14:02.100
and verify K8s service account using kubectl.

14:02.100 --> 14:05.790
Mainly, you need to verify the annotation, right?

14:05.790 --> 14:09.900
So first, we will get the service account, right?

14:09.900 --> 14:11.850
Whether it is created or not.

14:11.850 --> 14:13.110
So we list all the things

14:13.110 --> 14:14.970
and verify whether it is present there or not.

14:14.970 --> 14:17.910
So you can see here AWS load balancer controller

14:17.910 --> 14:19.440
is present there.

14:19.440 --> 14:22.080
So clear, and we'll run the command,

14:22.080 --> 14:25.680
get that respective service account, right?

14:25.680 --> 14:28.260
And we should see that that service account is present,

14:28.260 --> 14:31.650
and which is created three minutes before, right?

14:31.650 --> 14:33.510
And now describe that service account,

14:33.510 --> 14:35.940
kubectl describe service account

14:35.940 --> 14:40.380
AWS load balancer controller and hyphen N kube system.

14:40.380 --> 14:42.570
So when we describe that service account,

14:42.570 --> 14:45.330
so we should see the annotations tab mainly.

14:45.330 --> 14:47.340
So let's see here.

14:47.340 --> 14:51.480
Name of the service account is AWS load balancer controller

14:51.480 --> 14:53.490
and namespace is kube system,

14:53.490 --> 14:55.713
and labels, you can see, App Kubernetes,

14:56.663 --> 14:58.770
(indistinct) manager by eksctl.

14:58.770 --> 15:03.770
And in the annotations you can see eks.amazonaws.com/rolearn

15:04.770 --> 15:07.620
and this is the role ARN it has been annotated with.

15:07.620 --> 15:09.660
So now let's come back here,

15:09.660 --> 15:12.690
and search for that role ARN here.

15:12.690 --> 15:15.000
And you can see this is the same thing here.

15:15.000 --> 15:16.860
So that's the important thing.

15:16.860 --> 15:20.160
So now the, you can see that newly created role ARN

15:20.160 --> 15:23.787
is added in the annotations confirming that

15:23.787 --> 15:28.680
AWS IAM role bound to Kubernetes service account, right?

15:28.680 --> 15:33.680
So this completes the creation of service account.

15:33.900 --> 15:38.580
IAM policy, IAM role, and annotating that IAM role ARN

15:38.580 --> 15:41.610
inside this Kubernetes service account.

15:41.610 --> 15:43.980
So in our next lecture, we are going to go ahead

15:43.980 --> 15:47.820
and then install the load balancer controller using Helm.

15:47.820 --> 15:49.560
So I'll see you in the next lecture.

15:49.560 --> 15:50.880
Until then, bye bye.

15:50.880 --> 15:51.713
Thank you.
